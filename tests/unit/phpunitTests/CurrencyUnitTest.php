<?php

use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

use App\Http\Controllers\CurrenciesController;
use Illuminate\Http\Request;

use App\Models\User;
use App\Models\Currency;

class CurrencyUnitTest extends TestCase
{
    /** @var  CurrenciesController */
    protected $controller;

    /** @var  Request */
    protected $request;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        //Setear usuario
        $user = new User(array('username' => 'Ana', 'id_user' => 10));
        $this->be($user);

        //Inicializar el controlador a probar
        $this->controller = new CurrenciesController();

        //Parámetros mínimos del request
        $this->resetRequest();


    }
    public function resetRequest(){
        //Parámetros mínimos del request
        $this->request = new Request();
    }

    public function tearDown()
    {
        Mockery::close();
        Session::clear();
    }

    public function testConversor_monedas()
    {
        $this->visit("/conversor_moneda");
        $this->request["moneda_origen"] = 'USD';
        $this->request["moneda_destino"] = 'CLP';
        $this->request["cantidad"] = '500';
        $json = $this->controller->conversor_monedas($this->request);

        $this->assertNotNull($json);

        fwrite(STDOUT,  "\033[32m \e[1m ✓ \033[35m CurrencyUnitTest:\033[0m testConversor_monedas "."\033[32m OK \033[0m ". "\n");
    }
}
