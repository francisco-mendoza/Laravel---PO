<?php

use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

use App\Http\Controllers\Auth\LoginController;
use App\Models\User;
use Page\TestData;

class LoginUnitTest extends TestCase
{
    /** @var  LoginController */
    protected $controller;


    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub


        //Inicializar el controlador a probar
        $this->controller = new LoginController();


    }
    public function tearDown(){
        Session::clear();
    }

    public function testIndex(){
        $this->visit("/login");
        $this->see("ROSS");
        $this->see("Ordenes de Compra");
        $this->see("Entrar con Google");

        fwrite(STDOUT,  "\033[32m \e[1m ✓ \033[35m LoginUnitTest:\033[0m testIndex "."\033[32m OK \033[0m ". "\n");
    }

    public function testUserRegisterAndLoginWithGoogle(){
        $user = new User(TestData::UserAttributes);
        $user->save();

        $this->seeInDatabase('users',['id_user'=>TestData::UserAttributes['id_user']]);
        $request = (object)TestData::LoginUserRequest;

        $respuesta = $this->controller->findOrCreateUser($request,'google');

        $this->assertTrue($respuesta != false ,'Usuario registrado y logeado con google');

        User::find(TestData::UserAttributes['id_user'])->delete();

        fwrite(STDOUT,  "\033[32m \e[1m ✓ \033[35m LoginUnitTest:\033[0m testUserRegisterAndLoginWithGoogle "."\033[32m OK \033[0m ". "\n");
    }
    public function testUserRegister(){
        $user = new User(TestData::UserAttributesNoGoogleLogin);
        $user->save();

        $this->seeInDatabase('users',['id_user'=>TestData::UserAttributesNoGoogleLogin['id_user']]);
        $request = (object)TestData::LoginUserRequest;

        $respuesta = $this->controller->findOrCreateUser($request,'google');

        $this->assertTrue($respuesta != false ,'Usuario registrado');

        User::find(TestData::UserAttributesNoGoogleLogin['id_user'])->delete();

        fwrite(STDOUT,  "\033[32m \e[1m ✓ \033[35m LoginUnitTest:\033[0m testUserRegister "."\033[32m OK \033[0m ". "\n");
    }
    public function testUserNoRegister(){

        $request = (object)TestData::LoginUserRequest;

        $respuesta = $this->controller->findOrCreateUser($request,'google');

        $this->assertTrue($respuesta == false ,'Usuario No registrado ');

        fwrite(STDOUT,  "\033[32m \e[1m ✓ \033[35m LoginUnitTest:\033[0m testUserNoRegister "."\033[32m OK \033[0m ". "\n");

    }

}
